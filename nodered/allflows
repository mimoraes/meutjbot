[
    {
        "id": "619dd4c6.47a86c",
        "type": "tab",
        "label": "TJBot Weather!",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a807e1c1.b1a62",
        "type": "tab",
        "label": "TJBot Tweet Tone Analyzer",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f97ce725.23d2e8",
        "type": "tab",
        "label": "TJBot Camera_#issue2",
        "disabled": true,
        "info": ""
    },
    {
        "id": "6ef2274.0d05cd8",
        "type": "tab",
        "label": "TJBot Speech ",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5cca8b70.d34494",
        "type": "tab",
        "label": "TJBot LED Party",
        "disabled": true,
        "info": ""
    },
    {
        "id": "a616031b.1b331",
        "type": "twitter-credentials",
        "z": "",
        "screen_name": "@mimiteo"
    },
    {
        "id": "44d2ad66.056944",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "95077554.783ec8",
        "type": "change",
        "z": "619dd4c6.47a86c",
        "name": "Forecast",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.forecast",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 414,
        "y": 176,
        "wires": [
            [
                "acdc2ca1.f23a08"
            ]
        ]
    },
    {
        "id": "8a2d10a3.ff4f6",
        "type": "watson-text-to-speech",
        "z": "619dd4c6.47a86c",
        "name": "falar",
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "pt-BR_IsabelaVoice",
        "voicehidden": "en-US_MichaelVoice",
        "format": "audio/wav",
        "password": "OMO81CBoOqhH",
        "payload-response": true,
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 696,
        "y": 103,
        "wires": [
            [
                "a8c3998a.b001a8"
            ]
        ]
    },
    {
        "id": "502fcd3b.cb05a4",
        "type": "wunderground",
        "z": "619dd4c6.47a86c",
        "name": "Campinas",
        "lon": "",
        "lat": "",
        "city": "Hortolandia",
        "country": "Brazil",
        "x": 248,
        "y": 175,
        "wires": [
            [
                "95077554.783ec8"
            ]
        ]
    },
    {
        "id": "a8c3998a.b001a8",
        "type": "play audio",
        "z": "619dd4c6.47a86c",
        "name": "",
        "voice": "13",
        "x": 802,
        "y": 174,
        "wires": []
    },
    {
        "id": "fa75a00c.2684f",
        "type": "inject",
        "z": "619dd4c6.47a86c",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 185,
        "y": 100,
        "wires": [
            [
                "502fcd3b.cb05a4"
            ]
        ]
    },
    {
        "id": "5133447b.f25d9c",
        "type": "debug",
        "z": "619dd4c6.47a86c",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 678.5,
        "y": 39,
        "wires": []
    },
    {
        "id": "acdc2ca1.f23a08",
        "type": "watson-translator",
        "z": "619dd4c6.47a86c",
        "name": "",
        "action": "translate",
        "basemodel": "en-pt",
        "domain": "news",
        "srclang": "en",
        "destlang": "pt",
        "password": "koE7vgOLDhv4",
        "custom": "",
        "domainhidden": "news",
        "srclanghidden": "en",
        "destlanghidden": "pt",
        "basemodelhidden": "en-pt",
        "customhidden": "",
        "filetype": "forcedglossary",
        "trainid": "",
        "lgparams2": true,
        "neural": true,
        "default-endpoint": true,
        "service-endpoint": "https://gateway.watsonplatform.net/language-translator/api",
        "x": 505.5,
        "y": 101,
        "wires": [
            [
                "8a2d10a3.ff4f6",
                "5133447b.f25d9c"
            ]
        ]
    },
    {
        "id": "fa768985.5df268",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "Tone categories",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "15ea44aa.69eadb",
        "type": "function",
        "z": "a807e1c1.b1a62",
        "name": "HighScore",
        "func": "var emotions = [];\nemotions = msg.response.document_tone.tone_categories\n                .filter(function(c){\n                    if (c.category_id == \"emotion_tone\")\n                    {return c; }\n                    })[0].tones;\n                    \n//rename tone_id to topic\nvar myscore =  0;     \nvar mynewmsg ={};\n//msg.payload = emotions;\nfor (var i=0; i<emotions.length; i++) {\n\n    if(emotions[i].score > myscore)\n    {\n        msg.payload = emotions[i].score;\n        msg.topic = emotions[i].tone_name;\n        myscore = emotions[i].score;\n    }\n //   node.send(msg);\n}\nmynewmsg = msg;\nreturn mynewmsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "3e936a3e.b72806",
                "1cd8e0df.93633f"
            ]
        ]
    },
    {
        "id": "3e936a3e.b72806",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "Score",
        "active": false,
        "console": "false",
        "complete": "topic",
        "x": 950,
        "y": 480,
        "wires": []
    },
    {
        "id": "4b59b8c4.3e9668",
        "type": "inject",
        "z": "a807e1c1.b1a62",
        "name": "Test",
        "topic": "",
        "payload": "I love my mother",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "18795546.69810b"
            ]
        ]
    },
    {
        "id": "9ff1f5.3b000e08",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "Print msg.response",
        "active": false,
        "console": "false",
        "complete": "response",
        "x": 770,
        "y": 400,
        "wires": []
    },
    {
        "id": "18795546.69810b",
        "type": "watson-tone-analyzer-v3",
        "z": "a807e1c1.b1a62",
        "name": "Analyze Tone",
        "tones": "emotion",
        "sentences": "true",
        "contentType": "false",
        "tone-method": "generalTone",
        "interface-version": "2016-05-19",
        "inputlang": "en",
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 560,
        "y": 440,
        "wires": [
            [
                "4d73e2b.3821b1c",
                "834b3a33.456c68",
                "15ea44aa.69eadb"
            ]
        ]
    },
    {
        "id": "4d73e2b.3821b1c",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "tone_categories",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "response.document_tone.tone_categories",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "fa768985.5df268"
            ]
        ]
    },
    {
        "id": "c90ae54f.253ec8",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "tweet.text",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "3c705539.a2a41a",
        "type": "inject",
        "z": "a807e1c1.b1a62",
        "name": "Teste feliz",
        "topic": "",
        "payload": "I love to live and to love",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 200,
        "wires": [
            [
                "cfd50151.4836e"
            ]
        ]
    },
    {
        "id": "cfd50151.4836e",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tweet.text",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "f408ed81.ccf1b"
            ]
        ]
    },
    {
        "id": "fff5e4ea.fc7a58",
        "type": "inject",
        "z": "a807e1c1.b1a62",
        "name": "Teste triste",
        "topic": "",
        "payload": "This is sad and boring",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 240,
        "wires": [
            [
                "cfd50151.4836e"
            ]
        ]
    },
    {
        "id": "3d4433e4.29601c",
        "type": "inject",
        "z": "a807e1c1.b1a62",
        "name": "Teste Brava",
        "topic": "",
        "payload": "I hate no sense tests",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "cfd50151.4836e"
            ]
        ]
    },
    {
        "id": "49c8bfea.13368",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 330,
        "y": 80,
        "wires": []
    },
    {
        "id": "16c71284.a7a0cd",
        "type": "watson-text-to-speech",
        "z": "a807e1c1.b1a62",
        "name": "",
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "pt-BR_IsabelaVoice",
        "voicehidden": "en-US_LisaVoice",
        "format": "audio/wav",
        "password": "OMO81CBoOqhH",
        "payload-response": true,
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 880,
        "y": 200,
        "wires": [
            [
                "a60ed0fa.a171f",
                "1a6d3228.61c00e"
            ]
        ]
    },
    {
        "id": "a60ed0fa.a171f",
        "type": "play audio",
        "z": "a807e1c1.b1a62",
        "name": "",
        "voice": "13",
        "x": 1090,
        "y": 180,
        "wires": []
    },
    {
        "id": "1a6d3228.61c00e",
        "type": "speakerpi-output",
        "z": "a807e1c1.b1a62",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "11025",
        "name": "",
        "x": 1120,
        "y": 220,
        "wires": []
    },
    {
        "id": "f408ed81.ccf1b",
        "type": "function",
        "z": "a807e1c1.b1a62",
        "name": "Remove URLS and replace #",
        "func": "// var tweet = msg.tweet.text;\nvar tweet = msg.payload;\nvar newtweet = tweet.replace(/#/g, \" Hash tag \");\n\n// regex from https://stackoverflow.com/questions/1500260/detect-urls-in-text-with-javascript\nmsg.payload = newtweet.replace( /(([a-z]+:\\/\\/)?(([a-z0-9\\-]+\\.)+([a-z]{2}|biz|com|co|edu|gov|info|net|org|ly))(:[0-9]{1,5})?(\\/[a-z0-9_\\-\\.~]+)*(\\/([a-z0-9_\\-\\.]*)(\\?[a-z0-9+_\\-\\.%=&amp;]*)?)?(#[a-zA-Z0-9!$&'()*+.=-_~:@/?]*)?)(\\s+|$)/gi, \"see short URL \" );\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 600,
        "y": 200,
        "wires": [
            [
                "18795546.69810b"
            ]
        ]
    },
    {
        "id": "7c33cb72.13bc24",
        "type": "twitter in",
        "z": "a807e1c1.b1a62",
        "twitter": "a616031b.1b331",
        "tags": "#help",
        "user": "false",
        "name": "",
        "topic": "tweets",
        "inputs": 1,
        "x": 100.5,
        "y": 124,
        "wires": [
            [
                "49c8bfea.13368",
                "c90ae54f.253ec8",
                "cfd50151.4836e"
            ]
        ]
    },
    {
        "id": "1cd8e0df.93633f",
        "type": "switch",
        "z": "a807e1c1.b1a62",
        "name": "SelectColor",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Joy",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Fear",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Sadness",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Anger",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Disgust",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 6,
        "x": 510,
        "y": 820,
        "wires": [
            [
                "e63fc1d2.aa83d",
                "6ee98fab.621"
            ],
            [
                "36932e77.a66ea2"
            ],
            [
                "efa1d859.25e6b8"
            ],
            [
                "5fd13443.a0570c"
            ],
            [
                "29997435.a645cc"
            ],
            [
                "e534ddd3.d484b"
            ]
        ]
    },
    {
        "id": "e63fc1d2.aa83d",
        "type": "trigger",
        "z": "a807e1c1.b1a62",
        "op1": "40",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 740,
        "y": 660,
        "wires": [
            [
                "cd8405aa.19d1d8"
            ]
        ]
    },
    {
        "id": "1bb5608e.69f06f",
        "type": "rpi-neopixels",
        "z": "a807e1c1.b1a62",
        "name": "Set LED Color",
        "pixels": "1",
        "bgnd": "",
        "fgnd": "",
        "wipe": "40",
        "mode": "pcent",
        "rgb": "rgb",
        "x": 1080,
        "y": 820,
        "wires": []
    },
    {
        "id": "36932e77.a66ea2",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Red Color - Fear",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 740,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "5fd13443.a0570c",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Green Color - Anger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "efa1d859.25e6b8",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Blue Color - Sadness",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,255",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 780,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "6ee98fab.621",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Yellow Color - Joy",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 700,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "29997435.a645cc",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Purple Color - Disgust",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "221,160,221",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 860,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "e534ddd3.d484b",
        "type": "change",
        "z": "a807e1c1.b1a62",
        "name": "Off - Other",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 900,
        "wires": [
            [
                "1bb5608e.69f06f"
            ]
        ]
    },
    {
        "id": "cd8405aa.19d1d8",
        "type": "rpi-gpio out",
        "z": "a807e1c1.b1a62",
        "name": "",
        "pin": "37",
        "set": "",
        "level": "0",
        "out": "pwm",
        "x": 1060,
        "y": 660,
        "wires": []
    },
    {
        "id": "834b3a33.456c68",
        "type": "debug",
        "z": "a807e1c1.b1a62",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 770,
        "y": 540,
        "wires": []
    },
    {
        "id": "6d7a4b18.b34334",
        "type": "switch",
        "z": "f97ce725.23d2e8",
        "name": "Click",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "error",
                "vt": "str",
                "case": true
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 950,
        "y": 80,
        "wires": [
            [],
            [
                "6f9086e6.ac5488",
                "69933ef6.0bdee"
            ]
        ]
    },
    {
        "id": "c5e7f341.3df9d",
        "type": "debug",
        "z": "f97ce725.23d2e8",
        "name": "Print msg.result.images",
        "active": true,
        "console": "false",
        "complete": "result.images",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "e4aeb6d8.ced648",
        "type": "link out",
        "z": "f97ce725.23d2e8",
        "name": "",
        "links": [
            "cb0d9ce4.bce98",
            "4395d156.a8315"
        ],
        "x": 1155,
        "y": 420,
        "wires": []
    },
    {
        "id": "be29aaed.8dc7a8",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Did the text include a color?",
        "info": "This flow requires the \nnode-red-node-pi-neopixel \nnpm package.",
        "x": 1260,
        "y": 460,
        "wires": []
    },
    {
        "id": "6f9086e6.ac5488",
        "type": "file",
        "z": "f97ce725.23d2e8",
        "name": "Save photo.jpg",
        "filename": "/tmp/photo.jpg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "3c1d1d93.0e8a12",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Remember to keep the .jpg < 2MB",
        "info": "",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "12d44a1e.144306",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Reload picture into Node-RED Dashboard",
        "info": "<script>\n    window.location.reload(false); \n</script>",
        "x": 1180,
        "y": 200,
        "wires": []
    },
    {
        "id": "85513dec.e4283",
        "type": "inject",
        "z": "f97ce725.23d2e8",
        "name": "Test TJBot RaspPi Photo",
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "92f6e829.eca048"
            ]
        ]
    },
    {
        "id": "92f6e829.eca048",
        "type": "function",
        "z": "f97ce725.23d2e8",
        "name": "Set Photo File name",
        "func": "// Set msg.filemode=\"0\" for no file and buffer mode - \n// puts the picture into msg.payload as an raw binary object\n\n// Override msg.filename with the filename\n// Override msg.filepath with the filepath\n\nmsg.filemode=\"0\";\nmsg.filename=\"photo.jpg\";\nmsg.filepath=\"/tmp\";\nmsg.payload=\"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 80,
        "wires": [
            [
                "8f7b38ce.c4fcb8"
            ]
        ]
    },
    {
        "id": "e44bec74.56ecd",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Text Extraction",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "82e9daf0.324308",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Image Classification",
        "info": "",
        "x": 130,
        "y": 420,
        "wires": []
    },
    {
        "id": "5e22d174.913fb",
        "type": "debug",
        "z": "f97ce725.23d2e8",
        "name": "What did Watson find?",
        "active": true,
        "console": "false",
        "complete": "template",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "6a2a3d1e.16f1e4",
        "type": "visual-recognition-v3",
        "z": "f97ce725.23d2e8",
        "name": "",
        "apikey": "a1453ae3a7cb0afd5c5add5a90d8f82ae517f2ff",
        "image-feature": "classifyImage",
        "lang": "en",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "b30addb6.c70c8",
                "c5e7f341.3df9d"
            ]
        ]
    },
    {
        "id": "b30addb6.c70c8",
        "type": "function",
        "z": "f97ce725.23d2e8",
        "name": "Process Results",
        "func": "if (typeof msg.result == 'undefined') {\n    return null;\n}\n\n// Text Extraction\nif (typeof msg.result.images[0].text != 'undefined') {\n    var image_text = msg.result.images[0].text;\n    msg.payload = image_text;\n    msg.template = image_text;\n    if( image_text.length >0 ) {\n       msg.template= \"Watson found the words: \"+image_text;\n    }\n    return msg;\n}\n\nvar bestcolor = -1;\nvar colorscore = 0;\nvar c_id = 0;\nvar say = \"\";\nvar item;\n\nfor ( c_id=0; c_id < (msg.result.images[0].classifiers.length); c_id++ ){\n    // find the best color, if any\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n      if ( object.includes(\"color\") ) {\n        if( msg.result.images[0].classifiers[c_id].classes[i].score > colorscore){\n            bestcolor = i;\n            colorscore = msg.result.images[0].classifiers[c_id].classes[i].score;\n        }\n      }\n    }\n \n    var bestItem = 0;\n    var itemScore = 0;\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n      if ( !object.includes(\"color\") ) {\n        if( msg.result.images[0].classifiers[c_id].classes[i].score > itemScore){\n            bestItem = i;\n            itemScore =  msg.result.images[0].classifiers[c_id].classes[i].score;\n        }\n      }\n    }\n \n     if( bestcolor != \"-1\") {\n        // found a color\n        item = msg.result.images[0].classifiers[c_id].classes[bestcolor].class + \" \" + msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n        bestcolor = -1;\n    } else {\n       item = msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n    }\n//    say = say + \" Watson's \" + msg.result.images[0].classifiers[c_id].name + \" classifier thinks this picture contains a \" + item +\".\";\n    say = say + \" Watson thinks this picture contains a \" + item +\".\";\n}\nmsg.payload =  say;\n\nvar picInfo = msg.result.images[0].classifiers[0].classes;\nvar arrayLength = picInfo.length;\n\nmsg.template=\"<style>h4 { text-align: center; margin: 10px; }\";\nmsg.template=msg.template+\"table {    width: 440px;    margin-top: 10px; }\";\nmsg.template=msg.template+\"th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; background-color: #FFFFFF; width: 50%;}\";\nmsg.template=msg.template+\".classifier {background-color: rgb(85,150,230);text-align: center;}\";\nmsg.template=msg.template+\".title { background-color:LightGrey;}</style>\";\n\nmsg.template=msg.template+\"<h2>\"+say+\"</h2><table span=100%><tr><th>Class</th><th>Confidence</th></tr>\";\nfor (var i = 0; i < arrayLength; i++) {\n  msg.template = msg.template + \"<tr><td>\" + picInfo[i].class + \"</td><td>\" + picInfo[i].score + \"</td></tr>\";\n}\nmsg.template = msg.template + \"</table>\"\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "7fe30b87.8043d4",
                "5e22d174.913fb",
                "e4aeb6d8.ced648"
            ]
        ]
    },
    {
        "id": "3e892b6a.771db4",
        "type": "file in",
        "z": "f97ce725.23d2e8",
        "name": "photo.jpg",
        "filename": "/tmp/photo.jpg",
        "format": "",
        "x": 600,
        "y": 380,
        "wires": [
            [
                "6a2a3d1e.16f1e4"
            ]
        ]
    },
    {
        "id": "424d5196.72ba6",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Take Photos from a Raspberry Pi Camera",
        "info": "If you add a Raspberry Pi Camera to your TJBot,\nhe can \"see\" and take Photos through his \n\"eye\" cutout.\n\nThis Node-RED flow requires the\nnode-red-contrib-camerapi npm package.\n\nDon't forget to enable the Camera in the \nRaspberry Pi Configuration utility.",
        "x": 200,
        "y": 38,
        "wires": []
    },
    {
        "id": "b2be907f.ce258",
        "type": "switch",
        "z": "f97ce725.23d2e8",
        "name": "SelectColor",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "yellow",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "red",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "blue",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "green",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "purple",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "pink",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "party",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 8,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "634d6c79.5833f4",
                "5169fd17.ebb224"
            ],
            [
                "e97b5755.ba9aa8"
            ],
            [
                "b0bafd21.e26a"
            ],
            [
                "be1c06ea.4ce9a8"
            ],
            [
                "5f82911c.d5259"
            ],
            [
                "4a879e87.9b5b9"
            ],
            [
                "bcdc62f7.e4adb"
            ],
            [
                "42ba81f4.acfc"
            ]
        ]
    },
    {
        "id": "146c0cbd.7fd193",
        "type": "rpi-neopixels",
        "z": "f97ce725.23d2e8",
        "name": "Turn on light",
        "pixels": "1",
        "bgnd": "",
        "fgnd": "",
        "wipe": "40",
        "mode": "pcent",
        "rgb": "rgb",
        "x": 1030,
        "y": 640,
        "wires": []
    },
    {
        "id": "9e42baed.5250a8",
        "type": "debug",
        "z": "f97ce725.23d2e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1030,
        "y": 740,
        "wires": []
    },
    {
        "id": "e97b5755.ba9aa8",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Red Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 560,
        "wires": [
            [
                "9e42baed.5250a8",
                "146c0cbd.7fd193"
            ]
        ]
    },
    {
        "id": "be1c06ea.4ce9a8",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Green Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "9e42baed.5250a8",
                "146c0cbd.7fd193"
            ]
        ]
    },
    {
        "id": "b0bafd21.e26a",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Blue Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,255",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 600,
        "wires": [
            [
                "146c0cbd.7fd193",
                "9e42baed.5250a8"
            ]
        ]
    },
    {
        "id": "634d6c79.5833f4",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Yellow Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 520,
        "wires": [
            [
                "9e42baed.5250a8",
                "146c0cbd.7fd193"
            ]
        ]
    },
    {
        "id": "5f82911c.d5259",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Purple Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "44,116,163",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 680,
        "wires": [
            [
                "146c0cbd.7fd193",
                "9e42baed.5250a8"
            ]
        ]
    },
    {
        "id": "42ba81f4.acfc",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Off - Other",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 880,
        "wires": [
            [
                "146c0cbd.7fd193",
                "9e42baed.5250a8"
            ]
        ]
    },
    {
        "id": "5169fd17.ebb224",
        "type": "trigger",
        "z": "f97ce725.23d2e8",
        "op1": "40",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 700,
        "y": 480,
        "wires": [
            [
                "1402bf1f.384c01"
            ]
        ]
    },
    {
        "id": "1402bf1f.384c01",
        "type": "rpi-gpio out",
        "z": "f97ce725.23d2e8",
        "name": "",
        "pin": "37",
        "set": "",
        "level": "0",
        "out": "pwm",
        "x": 1020,
        "y": 480,
        "wires": []
    },
    {
        "id": "4a879e87.9b5b9",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Pink Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "8,253,222",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 720,
        "wires": [
            [
                "146c0cbd.7fd193",
                "9e42baed.5250a8"
            ]
        ]
    },
    {
        "id": "4395d156.a8315",
        "type": "link in",
        "z": "f97ce725.23d2e8",
        "name": "",
        "links": [
            "e4aeb6d8.ced648"
        ],
        "x": 175,
        "y": 800,
        "wires": [
            [
                "b2be907f.ce258",
                "58c2bc21.1db014",
                "e0bfedbd.395ba"
            ]
        ]
    },
    {
        "id": "bcdc62f7.e4adb",
        "type": "function",
        "z": "f97ce725.23d2e8",
        "name": "Party!",
        "func": "var count = flow.get('count') || 0;\n\nif( count < 20 ) {\n   // Generate a random color and set the NeoPixel LED\n    msg.payload = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6); \n    count += 1;\n    flow.set('count',count);\n        msg.count = count;\n    return [msg,msg];\n} else {\n    count = 0;\n    flow.set('count',count);\n    return [msg,null];\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 690,
        "y": 760,
        "wires": [
            [
                "146c0cbd.7fd193"
            ],
            [
                "c2cb7db2.c1104"
            ]
        ]
    },
    {
        "id": "c2cb7db2.c1104",
        "type": "delay",
        "z": "f97ce725.23d2e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 690,
        "y": 840,
        "wires": [
            [
                "bcdc62f7.e4adb"
            ]
        ]
    },
    {
        "id": "85df07e6.3b8548",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Classify Image",
        "rules": [
            {
                "t": "set",
                "p": "params.detect_mode",
                "pt": "msg",
                "to": "classify",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "3e892b6a.771db4"
            ]
        ]
    },
    {
        "id": "fc76f161.8f99c",
        "type": "change",
        "z": "f97ce725.23d2e8",
        "name": "Extract Text",
        "rules": [
            {
                "t": "set",
                "p": "params.detect_mode",
                "pt": "msg",
                "to": "text",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "3e892b6a.771db4"
            ]
        ]
    },
    {
        "id": "60f151a8.224af",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-node-pi-neopixel dependency",
        "info": "This flow requires the\n  node-red-node-pi-neopixel\nfor the Raspberry Pi NeoPixel GPIO node.\nYou can either \n  $ sudo npm -g install node-red-node-pi-neopixel\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 1110,
        "y": 600,
        "wires": []
    },
    {
        "id": "33f93a02.fcbc26",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-contrib-camerapi dependency",
        "info": "This flow requires\n  node-red-contrib-camerapi\n\nYou can either \n  $ sudo npm -g install node-red-contrib-camerapi\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 740,
        "y": 120,
        "wires": []
    },
    {
        "id": "c4a6426.d107dc",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-node-watson dependency",
        "info": "This flow requires the\n  node-red-node-watson@0.5.10 or higher\nfor the following Watson nodes:\n  Visual Recognition\n\nYou can either \n  $ sudo npm -g install node-red-node-watson\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "cf7d6238.1c61c",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Paste API keys for Visual Recognition",
        "info": "1. Log into Bluemix\n2. Create an instance of the \nWatson Visual Recognition service.\n3. Visit the Service Credentials tab\n4. Click on View Credentials\n5. Copy/Paste the password and username into\nthis Node-RED node.",
        "x": 730,
        "y": 340,
        "wires": []
    },
    {
        "id": "c953e0fa.d35a6",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-node-base64 dependency",
        "info": "This flow requires\n  node-red-node-base64\n  \nYou can either \n  $ sudo npm -g install node-red-node-base64\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 1200,
        "y": 120,
        "wires": []
    },
    {
        "id": "58c2bc21.1db014",
        "type": "watson-text-to-speech",
        "z": "f97ce725.23d2e8",
        "name": "",
        "lang": "en-US",
        "langhidden": "en-US",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "en-US_AllisonVoice",
        "voicehidden": "en-US_AllisonVoice",
        "format": "audio/wav",
        "password": "5824BY7NvNkT",
        "payload-response": true,
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 400,
        "y": 980,
        "wires": [
            [
                "7818ef37.92a0c",
                "1404caae.d77e55"
            ]
        ]
    },
    {
        "id": "1404caae.d77e55",
        "type": "play audio",
        "z": "f97ce725.23d2e8",
        "name": "",
        "voice": "",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "c9029771.8f7648",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-contrib-play-audio dependency",
        "info": "This flow requires the\n  node-red-contrib-play-audio\nfor the Browser play audio node.\nYou can either \n  $ sudo npm -g install node-red-contrib-play-audio\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 740,
        "y": 920,
        "wires": []
    },
    {
        "id": "4a36c247.240fac",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "Paste API keys for Text to Speech",
        "info": "1. Log into Bluemix\n2. Create an instance of the \nWatson Text to Speech service.\n3. Visit the Service Credentials tab\n4. Click on View Credentials\n5. Copy/Paste the password and username into\nthis Node-RED node.",
        "x": 400,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4ad292af.3f2dfc",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-node-watson dependency",
        "info": "This flow requires the\n  node-red-node-watson@0.5.10 or higher\nfor the following Watson nodes:\n  Text to Speech\n  Speech to Text\n  Tone Analyzer\n  Visual Recognition\n\nYou can either \n  $ sudo npm -g install node-red-node-watson\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 400,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e0bfedbd.395ba",
        "type": "debug",
        "z": "f97ce725.23d2e8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 390,
        "y": 900,
        "wires": []
    },
    {
        "id": "7818ef37.92a0c",
        "type": "speakerpi-output",
        "z": "f97ce725.23d2e8",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "11025",
        "name": "",
        "x": 680,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b5a243d6.f54cf",
        "type": "comment",
        "z": "f97ce725.23d2e8",
        "name": "node-red-contrib-speakerpi dependency",
        "info": "This flow requires the\n  node-red-contrib-speakerpi\nfor the Speaker Pi node.\nYou can either \n  $ sudo npm -g install node-red-contrib-speakerpi\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "8f7b38ce.c4fcb8",
        "type": "camerapi-takephoto",
        "z": "f97ce725.23d2e8",
        "filemode": "0",
        "filename": "",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "1",
        "rotation": "180",
        "fliph": "0",
        "flipv": "0",
        "brightness": "50",
        "contrast": "0",
        "sharpness": "0",
        "imageeffect": "none",
        "name": "Take Pi Camera Photo",
        "x": 760,
        "y": 80,
        "wires": [
            [
                "6d7a4b18.b34334"
            ]
        ]
    },
    {
        "id": "8d95a489.903168",
        "type": "watson-speech-to-text",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "alternatives": "1",
        "speakerlabels": false,
        "smartformatting": false,
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "band": "BroadbandModel",
        "bandhidden": "BroadbandModel",
        "password": "7mld2kuhgL1Z",
        "payload-response": true,
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "ffeb9be2.42a128",
                "2ec227f0.5f90e8"
            ]
        ]
    },
    {
        "id": "ffeb9be2.42a128",
        "type": "debug",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "transcription",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "2ec227f0.5f90e8",
        "type": "switch",
        "z": "6ef2274.0d05cd8",
        "name": "SelectColor",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "mãozinha",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "amarelo",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "red",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "azul",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "verde",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "roxo",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "rosa",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "festa",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "tempo",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 10,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "de7313de.ca841"
            ],
            [
                "7b0b55b6.39c16c"
            ],
            [
                "773e6cd2.5eb224"
            ],
            [
                "a7e2e150.b09a9"
            ],
            [
                "d4e74cd9.de193"
            ],
            [
                "1ab36337.f5f9ed"
            ],
            [
                "7ed856e4.998858"
            ],
            [
                "de7313de.ca841",
                "76efa17f.96ad6",
                "a9d43f0f.c3d4a"
            ],
            [
                "7ff8ade.79a4f54"
            ],
            [
                "d3b897a0.820a08"
            ]
        ]
    },
    {
        "id": "de7313de.ca841",
        "type": "trigger",
        "z": "6ef2274.0d05cd8",
        "op1": "40",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "",
        "name": "",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "fb67fbf3.d8e348"
            ]
        ]
    },
    {
        "id": "fb67fbf3.d8e348",
        "type": "rpi-gpio out",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "pin": "37",
        "set": "",
        "level": "0",
        "out": "pwm",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "2c401b4f.ab3534",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "Wave arm or Set LED Color",
        "info": "",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "28c491e5.65bf2e",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "Tell the TJBot to Wave or Set a Color or ask for the Weather Report",
        "info": "",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "a4beb5ca.177788",
        "type": "rpi-neopixels",
        "z": "6ef2274.0d05cd8",
        "name": "Set LED Color",
        "pixels": "1",
        "bgnd": "",
        "fgnd": "",
        "wipe": "40",
        "mode": "pcent",
        "rgb": "rgb",
        "x": 700,
        "y": 460,
        "wires": []
    },
    {
        "id": "773e6cd2.5eb224",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Red Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "d4e74cd9.de193",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Green Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "a7e2e150.b09a9",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Blue Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,255",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "7b0b55b6.39c16c",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Yellow Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,255,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "1ab36337.f5f9ed",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Purple Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "238,130,238",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "7ed856e4.998858",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Pink Color",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "255,192,203",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 560,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "c7b8b226.845a3",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-node-pi-neopixel dependency",
        "info": "This flow requires the\n  node-red-node-pi-neopixel\nfor the Raspberry Pi NeoPixel GPIO node.\nYou can either \n  $ sudo npm -g install node-red-node-pi-neopixel\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 750,
        "y": 420,
        "wires": []
    },
    {
        "id": "c2222b85.fc0988",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "Paste API keys for Speech to Text",
        "info": "1. Log into Bluemix\n2. Create an instance of the \nWatson Speech to Text service.\n3. Visit the Service Credentials tab\n4. Click on View Credentials\n5. Copy/Paste the password and username into\nthis Node-RED node.",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "dfb10ef5.795b7",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-node-watson dependency",
        "info": "This flow requires the\n  node-red-node-watson\nfor the following Watson nodes:\n  Speech to Text\n\nYou can either \n  $ sudo npm -g install node-red-node-watson\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 640,
        "y": 120,
        "wires": []
    },
    {
        "id": "63c27d5e.4f31f4",
        "type": "inject",
        "z": "6ef2274.0d05cd8",
        "name": "Click here to Start Recording",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "e900710b.85423"
            ]
        ]
    },
    {
        "id": "78f7d10.a87c03",
        "type": "inject",
        "z": "6ef2274.0d05cd8",
        "name": "Click here to Stop Recording",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "e900710b.85423"
            ]
        ]
    },
    {
        "id": "d3b897a0.820a08",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Off - Other",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0,0,0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 740,
        "wires": [
            [
                "a4beb5ca.177788"
            ]
        ]
    },
    {
        "id": "76efa17f.96ad6",
        "type": "function",
        "z": "6ef2274.0d05cd8",
        "name": "Party!",
        "func": "var count = flow.get('count') || 0;\n\nif( count < 50 ) {\n   // Generate a random color and set the NeoPixel LED\n    msg.payload = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6); \n    count += 1;\n    flow.set('count',count);\n        msg.count = count;\n    return [msg,msg];\n} else {\n    count = 0;\n    flow.set('count',count);\n    return [msg,null];\n}\n",
        "outputs": "2",
        "noerr": 0,
        "x": 410,
        "y": 640,
        "wires": [
            [
                "a4beb5ca.177788"
            ],
            [
                "cdac671a.0d3e38"
            ]
        ]
    },
    {
        "id": "cdac671a.0d3e38",
        "type": "delay",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 410,
        "y": 700,
        "wires": [
            [
                "76efa17f.96ad6"
            ]
        ]
    },
    {
        "id": "15478090.d5f59f",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Forecast",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.forecast",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 760,
        "wires": [
            [
                "d93ecdc8.b3762"
            ]
        ]
    },
    {
        "id": "d93ecdc8.b3762",
        "type": "watson-text-to-speech",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "pt-BR_IsabelaVoice",
        "voicehidden": "en-US_AllisonVoice",
        "format": "audio/wav",
        "password": "OMO81CBoOqhH",
        "payload-response": true,
        "default-endpoint": true,
        "service-endpoint": "",
        "x": 800,
        "y": 600,
        "wires": [
            [
                "36f4e4bf.e5ff4c"
            ]
        ]
    },
    {
        "id": "7ff8ade.79a4f54",
        "type": "wunderground",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "lon": "",
        "lat": "",
        "city": "Hortolândia",
        "country": "Brazil",
        "x": 420,
        "y": 780,
        "wires": [
            [
                "15478090.d5f59f",
                "4bc8fb88.64dbb4"
            ]
        ]
    },
    {
        "id": "4bc8fb88.64dbb4",
        "type": "debug",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload.forecast",
        "x": 660,
        "y": 800,
        "wires": []
    },
    {
        "id": "36f4e4bf.e5ff4c",
        "type": "play audio",
        "z": "6ef2274.0d05cd8",
        "name": "",
        "voice": "",
        "x": 990,
        "y": 580,
        "wires": []
    },
    {
        "id": "ade97d6c.64a68",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-contrib-play-audio dependency",
        "info": "This flow requires the\n  node-red-contrib-play-audio\nfor the Browser play audio node.\nYou can either \n  $ sudo npm -g install node-red-contrib-play-audio\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 1080,
        "y": 540,
        "wires": []
    },
    {
        "id": "d186a8ee.c3a238",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "Paste API keys for Text to Speech",
        "info": "1. Log into Bluemix\n2. Create an instance of the \nWatson Text to Speech service.\n3. Visit the Service Credentials tab\n4. Click on View Credentials\n5. Copy/Paste the password and username into\nthis Node-RED node.",
        "x": 740,
        "y": 680,
        "wires": []
    },
    {
        "id": "dcb10366.11f89",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-node-watson dependency",
        "info": "This flow requires the\n  node-red-node-watson@0.5.10 or higher\nfor the following Watson nodes:\n  Text to Speech\n  Speech to Text\n  Tone Analyzer\n  Visual Recognition\n\nYou can either \n  $ sudo npm -g install node-red-node-watson\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 740,
        "y": 640,
        "wires": []
    },
    {
        "id": "8cc8df0a.7a34f",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-node-weather-underground dependency",
        "info": "This flow requires\n  node-red-node-weather-underground\n\nYou can either \n  $ sudo npm -g install node-red-node-weather-underground\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 310,
        "y": 820,
        "wires": []
    },
    {
        "id": "5af8dd5d.84eec4",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "WeatherUnderground API",
        "info": "Visit \n   https://www.wunderground.com/weather/api/\nto get yourself a free developer API key.",
        "x": 190,
        "y": 780,
        "wires": []
    },
    {
        "id": "503fd5c4.96daec",
        "type": "speakerpi-output",
        "z": "6ef2274.0d05cd8",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "11025",
        "name": "",
        "x": 1020,
        "y": 620,
        "wires": []
    },
    {
        "id": "a9d43f0f.c3d4a",
        "type": "change",
        "z": "6ef2274.0d05cd8",
        "name": "Party msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "TJ Bot is a party animal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 600,
        "wires": [
            [
                "d93ecdc8.b3762"
            ]
        ]
    },
    {
        "id": "35608a0c.341186",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-contrib-speakerpi dependency",
        "info": "This flow requires the\n  node-red-contrib-speakerpi\nfor the Speaker Pi node.\nYou can either \n  $ sudo npm -g install node-red-contrib-speakerpi\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 1080,
        "y": 680,
        "wires": []
    },
    {
        "id": "1610f8f7.b5ead7",
        "type": "comment",
        "z": "6ef2274.0d05cd8",
        "name": "node-red-contrib-micropi dependency",
        "info": "This flow requires the\n  node-red-contrib-micropi\nfor the Micro Pi node.\nYou can either \n  $ sudo npm -g install node-red-contrib-micropi\n  and restart the Node-RED service\nor install it from Node-RED Manage Palette.",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "f5e631e7.c90ca",
        "type": "function",
        "z": "5cca8b70.d34494",
        "name": "Random Color Generation",
        "func": "msg.payload = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 634.2857360839844,
        "y": 342.8571472167969,
        "wires": [
            [
                "bbae42f9.4d852",
                "a8d5e178.99d11"
            ]
        ]
    },
    {
        "id": "ac2b4bbf.795058",
        "type": "inject",
        "z": "5cca8b70.d34494",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "0.3",
        "crontab": "",
        "once": true,
        "x": 394.2857360839844,
        "y": 342.8571472167969,
        "wires": [
            [
                "f5e631e7.c90ca"
            ]
        ]
    },
    {
        "id": "bbae42f9.4d852",
        "type": "debug",
        "z": "5cca8b70.d34494",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 884.2857360839844,
        "y": 362.8571472167969,
        "wires": []
    },
    {
        "id": "a8d5e178.99d11",
        "type": "rpi-neopixels",
        "z": "5cca8b70.d34494",
        "name": "",
        "pixels": "1",
        "bgnd": "",
        "fgnd": "",
        "wipe": "40",
        "mode": "pcent",
        "rgb": "rgb",
        "x": 884.2857360839844,
        "y": 302.8571472167969,
        "wires": []
    },
    {
        "id": "51c54595.08580c",
        "type": "comment",
        "z": "5cca8b70.d34494",
        "name": "Blink the TJBot NeoPixel with random party colors",
        "info": "",
        "x": 494.2857360839844,
        "y": 302.8571472167969,
        "wires": []
    },
    {
        "id": "fb7b9bea.622928",
        "type": "comment",
        "z": "5cca8b70.d34494",
        "name": "Disable this flow if you want TJBot to blink for other events",
        "info": "If you are using Node-RED v0.17, you can click\non the Flow tab name and enable/disable flows.\n\nThis flow is simple / fun but monopolizes the\nLED.  If you want to use the TJBot NeoPixel\nfor other indicators, you'll want to disable this \nflow.",
        "x": 524.2857360839844,
        "y": 382.8571472167969,
        "wires": []
    },
    {
        "id": "e900710b.85423",
        "type": "microPi",
        "z": "6ef2274.0d05cd8",
        "name": "microPi",
        "filename": "/home/pi/audio/demo.wav",
        "domain": "http://localhost:1880/getAudio",
        "rate": "16000",
        "bitwidth": "16",
        "endian": "little",
        "encoding": "signed-integer",
        "channels": "1",
        "silence": "5",
        "debug": "false",
        "mode": "",
        "x": 400,
        "y": 180,
        "wires": [
            [],
            [
                "8d95a489.903168"
            ],
            []
        ]
    },
    {
        "id": "f8e8c905.d9d0b8",
        "type": "ui_button",
        "z": "f97ce725.23d2e8",
        "name": "",
        "group": "b0c8bac4.0ed82",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Take a TJBot Raspberry Pi Camera Photo",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "92f6e829.eca048"
            ]
        ]
    },
    {
        "id": "59397012.c2e1c",
        "type": "ui_button",
        "z": "f97ce725.23d2e8",
        "name": "",
        "group": "b0c8bac4.0ed82",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Ask Watson to Read this Photo",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "fc76f161.8f99c"
            ]
        ]
    },
    {
        "id": "dc6a6348.81dd7",
        "type": "ui_button",
        "z": "f97ce725.23d2e8",
        "name": "",
        "group": "b0c8bac4.0ed82",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Ask Watson to Summarize this Photo",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"params\":{\"detect_mode\":\"classify\"}}",
        "payloadType": "json",
        "topic": "",
        "x": 190,
        "y": 460,
        "wires": [
            [
                "85df07e6.3b8548"
            ]
        ]
    },
    {
        "id": "558168a7.b38f08",
        "type": "ui_template",
        "z": "f97ce725.23d2e8",
        "group": "b0c8bac4.0ed82",
        "name": "Photo",
        "order": 2,
        "width": "12",
        "height": "9",
        "format": "<div ng-bind-html></div>\n<img width=\"300\" height=\"300\" alt=\"Watson Image\" src=\"data:image/jpg;base64,{{msg.payload}}\"/>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "x": 1270,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7fe30b87.8043d4",
        "type": "ui_template",
        "z": "f97ce725.23d2e8",
        "group": "d24ce354.76f68",
        "name": "",
        "order": 5,
        "width": "9",
        "height": "12",
        "format": "<div ng-bind-html=\"msg.template\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 1200,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "69933ef6.0bdee",
        "type": "base64",
        "z": "f97ce725.23d2e8",
        "name": "Encode",
        "x": 1120,
        "y": 160,
        "wires": [
            [
                "558168a7.b38f08"
            ]
        ]
    }
]
